%!PS-Adobe-2.0
%%Creator: dvips(k) 2025.1 (TeX Live 2025)  Copyright 2025 Radical Eye Software
%%Title: rx.dvi
%%CreationDate: Fri Sep 26 17:23:18 2025
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 394 311
%%DocumentFonts: CMR10 CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips rx.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2025.09.26:1423
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2025 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
      pdf.dest.y pdf.tmpd mul add
      pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
            pdf.count 0 eq { exit } if
            counttomark 2 roll
            1 index /Rect eq
              {
                dup 4 array copy
                dup dup
                  1 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add sub
                  3 exch put
                dup
                  pdf.outerbox 2 get
                  pdf.linkmargin add
                  2 exch put
                dup dup
                  3 get
                  pdf.outerbox pdf.rect.ht
                  pdf.linkmargin 2 mul add add
                  1 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                  {
                    pdf.currentrect
                    dup
                      pdf.outerbox 0 get
                      pdf.linkmargin sub
                      0 exch put
                    dup
                      pdf.outerbox 2 get
                      pdf.linkmargin add
                      2 exch put
                    dup dup
                      1 get
                      pdf.baselineskip add
                      1 exch put
                    dup dup
                      3 get
                      pdf.baselineskip add
                      3 exch put
                    /pdf.currentrect exch def
                    pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                  exch
                repeat
                pdf.currentrect
                dup
                  pdf.outerbox 0 get
                  pdf.linkmargin sub
                  0 exch put
                dup dup
                  1 get
                  pdf.baselineskip add
                  1 exch put
                dup dup
                  3 get
                  pdf.baselineskip add
                  3 exch put
                dup 2 index 2 get  2 exch put
                /pdf.currentrect exch def
                pdf.breaklink.write
                SDict /pdf.pdfmark.good false put
                exit
              }
              { pdf.count 2 sub /pdf.count exch def }
            ifelse
          }
        loop
      }
    if
    /ANN
  }
    def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /pgfHrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 moveto dup 5 index lineto } bind def}
bind def

 /pgfVrgb{/pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfArgb} def /pgfdir { dup 0 exch moveto dup 5 index exch lineto }
bind def} bind def

 /pgfArgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 2 mul 1
add def 2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff
div 2 index 6 index sub pgfdiff div pgfheight 9 index 9 index 9 index
14 index pgfdiff { 3 index 3 index 3 index setrgbcolor pgfdir stroke
4 -1 roll 7 index add 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll .5 sub } repeat mark 15 1 roll cleartomark exch pop }bind def

 /pgfR1rgb{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRrgb} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2rgb{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setrgbcolor
fill pop}bind def

 /pgfRrgb{ /pgfdiff 8 index round cvi 8 index round cvi sub 4 mul 1
add def /pgfcircx pgfstartx 9 index pgfdiffx pgfdomb div mul add def
/pgfcircy pgfstarty 9 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 8 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
8 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
2 index 6 index sub pgfdiff div 2 index 6 index sub pgfdiff div 2 index
6 index sub pgfdiff div 8 index 8 index 8 index 13 index pgfdiff {
3 index 3 index 3 index setrgbcolor pgfcircx pgfcircy 2 index 0 360
arc closepath stroke 4 -1 roll 6 index add 4 -1 roll 5 index add 4
-1 roll 4 index add 4 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep add
def /pgfcircy pgfcircy pgfystep add def } repeat mark 14 1 roll cleartomark
exch pop }bind def

 /pgfHcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 moveto dup 6 index lineto } bind def}
bind def

 /pgfVcmyk{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAcmyk} def /pgfdir { dup 0 exch moveto dup 6 index exch lineto
} bind def} bind def

 /pgfAcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 2 mul
1 add def 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff
div 3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div
pgfheight 12 index 12 index 12 index 12 index 18 index pgfdiff { 4
index 4 index 4 index 4 index setcmykcolor pgfdir stroke 5 -1 roll
9 index add 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6
index add 5 -1 roll .5 sub } repeat mark 19 1 roll cleartomark exch
pop }bind def

 /pgfR1cmyk{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRcmyk} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2cmyk{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setcmykcolor
fill pop}bind def

 /pgfRcmyk{ /pgfdiff 10 index round cvi 10 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 11 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 11 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 10 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
10 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
3 index 8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 3 index
8 index sub pgfdiff div 3 index 8 index sub pgfdiff div 11 index 11
index 11 index 11 index 17 index pgfdiff { 4 index 4 index 4 index
4 index setcmykcolor pgfcircx pgfcircy 2 index 0 360 arc closepath
stroke 5 -1 roll 8 index add 5 -1 roll 7 index add 5 -1 roll 6 index
add 5 -1 roll 5 index add 5 -1 roll .25 sub /pgfcircx pgfcircx pgfxstep
add def /pgfcircy pgfcircy pgfystep add def } repeat mark 18 1 roll
cleartomark exch pop }bind def

 /pgfHgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 moveto dup 3 index lineto } bind def}
bind def

 /pgfVgray{ /pgfheight exch def 0.75 setlinewidth [] 0 setdash /pgfshade
{pgfAgray} def /pgfdir { dup 0 exch moveto dup 3 index exch lineto
} bind def} bind def

 /pgfAgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 2 mul
1 add def dup 2 index sub pgfdiff div pgfheight 3 index 6 index pgfdiff
{ 1 index setgray pgfdir stroke exch 3 index add exch .5 sub } repeat
mark 7 1 roll cleartomark exch pop }bind def

 /pgfR1gray{ newpath dup dup dup 0 360 arc clip newpath dup /pgfendx
exch def /pgfendy exch def 0.875 setlinewidth [] 0 setdash /pgfshade
{pgfRgray} def /pgfstartx exch def /pgfstarty exch def /pgfdiffx pgfendx
pgfstartx sub def /pgfdiffy pgfendy pgfstarty sub def dup /pgfdomb
exch def }bind def

 /pgfR2gray{ newpath 0.5 add pgfcircx pgfcircy 3 2 roll 0 360 arc setgray
fill pop}bind def

 /pgfRgray{ /pgfdiff 4 index round cvi 4 index round cvi sub 4 mul
1 add def /pgfcircx pgfstartx 5 index pgfdiffx pgfdomb div mul add
def /pgfcircy pgfstarty 5 index pgfdiffy pgfdomb div mul add def /pgfcircxe
pgfstartx 4 index pgfdiffx pgfdomb div mul add def /pgfcircye pgfstarty
4 index pgfdiffy pgfdomb div mul add def /pgfxstep pgfcircxe pgfcircx
sub pgfdiff div def /pgfystep pgfcircye pgfcircy sub pgfdiff div def
dup 2 index sub pgfdiff div 2 index 5 index pgfdiff { 1 index setgray
pgfcircx pgfcircy 2 index 0 360 arc closepath stroke exch 2 index add
exch .25 sub /pgfcircx pgfcircx pgfxstep add def /pgfcircy pgfcircy
pgfystep add def } repeat mark 6 1 roll cleartomark exch pop }bind
def

  /pgfsc{}bind def/pgffc{}bind def/pgfstr{stroke}bind def/pgffill{fill}bind
def/pgfeofill{eofill}bind def/pgfe{a dup 0 rlineto exch 0 exch rlineto
neg 0 rlineto closepath}bind def/pgfw{setlinewidth}bind def/pgfs{save
pgfpd 72 Resolution div 72 VResolution div neg scale magscale{1 DVImag
div dup scale}if pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind
def/pgfr{pgfsd restore}bind def userdict begin/pgfo{pgfsd /pgfx currentpoint
/pgfy exch def def @beginspecial}bind def /pgfc{newpath @endspecial
pgfpd}bind def /pgfsd{globaldict /pgfdelta /delta where {pop delta}
{0} ifelse put}bind def/pgfpd{/delta globaldict /pgfdelta get def}bind
def /.setblendmode where {pop} {/.setblendmode{pop}def} ifelse /.setfillconstantalpha
where {pop /.setopacityalpha {.setfillconstantalpha} def} {/.setopacityalpha
where {pop} {/.setopacityalpha {pop} def} ifelse} ifelse /.pgfsetfillopacityalpha{/pgffoa
exch def /.setfillconstantalpha where {pop pgffoa .setfillconstantalpha}
{/pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath
fill grestore newpath}bind def /pgfeofill{gsave pgffoa .setopacityalpha
eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}
ifelse} bind def /.pgfsetstrokeopacityalpha{/pgfsoa exch def /.setstrokeconstantalpha
where {pop pgfsoa .setstrokeconstantalpha} {/pgfstr{gsave pgfsoa .setopacityalpha
stroke grestore newpath}bind def} ifelse}bind def /pgffoa 1 def /pgfsoa
1 def /.pushpdf14devicefilter where {pop [userdict /bop-hook known
{userdict /bop-hook get aload pop} if {0 .pushpdf14devicefilter} aload
pop] cvx userdict exch /bop-hook exch put [userdict /eop-hook known
{userdict /eop-hook get aload pop} if {.poppdf14devicefilter} aload
pop] cvx userdict exch /eop-hook exch put} if systemdict /pdfmark known
not {userdict /pdfmark systemdict /cleartomark get put} if end

  /pgfwritesamplecmyk { 4 index 0 5 index pgfcheckcolorrange 255 mul
round cvi put 4 index 1 4 index pgfcheckcolorrange 255 mul round cvi
put 4 index 2 3 index pgfcheckcolorrange 255 mul round cvi put 4 index
3 2 index pgfcheckcolorrange 255 mul round cvi put pop pop pop pop
} bind def /pgfwritesamplergb { 3 index 0 4 index pgfcheckcolorrange
255 mul round cvi put 3 index 1 3 index pgfcheckcolorrange 255 mul
round cvi put 3 index 2 2 index pgfcheckcolorrange 255 mul round cvi
put pop pop pop } bind def /pgfwritesamplegray { pgfcheckcolorrange
16777215 mul round cvi 1 index 0 2 index -16 bitshift put 1 index 1
2 index 65535 and -8 bitshift put 1 index 2 2 index 255 and put pop
} bind def /pgfcheckcolorrange { dup 0.0 lt {pop 0.0} if dup 1.0 gt
{pop 1.0} if } bind def /pgfchanneldepthcmyk 8 def /pgfchanneldepthrgb
8 def /pgfchanneldepthgray 24 def /pgfcolorsamplecmyk 4 string def
/pgfcolorsamplergb 3 string def /pgfcolorsamplegray 3 string def /pgfrangecmyk
[0 1 0 1 0 1 0 1] def /pgfrangergb [0 1 0 1 0 1] def /pgfrangegray
[0 1] def

 /pgf1{gsave exec 1.0 pgfw 2.00002 0.0 moveto -6.00006 4.00005 lineto
-3.00003 0.0 lineto -6.00006 -4.00005 lineto pgffill  grestore} bind
def

 /pgf2{gsave exec 1.0 pgfw 0.8 pgfw [ ] 0.0 setdash 1 setlinecap 1
setlinejoin -3.00003 4.00005 moveto -2.75002 2.50002 0.0 0.24998 0.75
0.0 curveto 0.0 -0.24998 -2.75002 -2.50002 -3.00003 -4.00005 curveto
pgfstr  grestore} bind def

 /pgf3{gsave exec 1.0 pgfw [ ] 0.0 setdash 0.0 -5.00005 moveto 0.0
5.00005 lineto pgfstr  grestore} bind def

 /pgf4{gsave exec 1.0 pgfw [ ] 0.0 setdash -3.00003 -5.00005 moveto
0.0 -5.00005 lineto 0.0 5.00005 lineto -3.00003 5.00005 lineto pgfstr
 grestore} bind def

 /pgf5{gsave exec 1.0 pgfw [ ] 0.0 setdash -2.00002 -5.00005 moveto
1.0 -3.00003 1.0 3.00003 -2.00002 5.00005 curveto pgfstr  grestore}
bind def

 /pgf6{gsave exec 1.0 pgfw [ ] 0.0 setdash -4.50003 -5.00005 moveto
0.49998 0.0 lineto -4.50003 5.00005 lineto pgfstr  grestore} bind def

 /pgf7{gsave exec 1.0 pgfw -2.50002 0.0 translate [ ] 0.0 setdash 3.00003
0.0 moveto 3.00003 1.65689 1.65689 3.00003 0.0 3.00003 curveto -1.65689
3.00003 -3.00003 1.65689 -3.00003 0.0 curveto -3.00003 -1.65689 -1.65689
-3.00003 0.0 -3.00003 curveto 1.65689 -3.00003 3.00003 -1.65689 3.00003
0.0 curveto closepath gsave pgffc pgffill grestore gsave pgfsc pgfstr
grestore newpath  grestore} bind def

 /pgf8{gsave exec 1.0 pgfw [ ] 0.0 setdash 1.0 0.0 moveto -5.00005
3.00003 lineto -11.00012 0.0 lineto -5.00005 -3.00003 lineto closepath
gsave pgffc pgffill grestore gsave pgfsc pgfstr grestore newpath  grestore}
bind def
 
@fedspecial end
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 60 /less put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC8958A7B37B99FAE3E43BBB6020F93BFD308CF7058A02DB93F2B775FE
66D978335AB563F183C08993E531F49DA0F740CFB95151F208BA9B5A85A71A41
908E90F78765933254F656C36A3E31AD9FB30AFC4E710FB204EA4EADD18F6AB2
D6B7DD231F001B779D5DE538BC3F803F8D48034D198C4ABFC1E15329FF28F1EC
0E4CA20A8955B97A3A5F66E7F07C9C389579E6E07C7B8517CFC535DB0D12B6F5
7A7C292582309C09E89CF4111734BAA78CAB3BDD6B34C23235968C14851E3760
940A38F367A42D48D453
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.0: CMR10 003.002
%%Title: CMR10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR10 known{/CMR10 findfont dup/UniqueID known{dup
/UniqueID get 5000793 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR10 def
/FontBBox {-40 -250 1009 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR10.) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 56 /eight put
dup 61 /equal put
dup 65 /A put
dup 66 /B put
dup 69 /E put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 98 /b put
dup 99 /c put
dup 105 /i put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9B8591E5F01442D8
569672CF86B91C3F79C5DDC97C190EE0082814A5B5A2A5E77C790F087E729079
24A5AC880DDED58334DD5E8DC6A0B2BD4F04B17334A74BF8FF5D88B7B678A04A
2255C050CB39A389106B0C672A1912AFA86A49EFD02E61E6509E50EE35E67944
8FC63D91C3D2794B49A0C2993832BC4CDC8F7BD7575AD61BCDF42E2E421AA93E
3FF9E4FAD980256D8B377043A07FC75D6169338028692CCA8CD1FE92FD60AD26
D57B7519B80A8F8DCE9CEE5CDF720AF268D3C14099498A843D76E3B6C0328F24
D36EFE7F5C4E5B5C612786200C8DE3A41EE5F1FFAF4097653CFCDC8F4FD32E0B
03EDB3E413283B9EFB0AC33B055617005BC9B0057FD68C52D1B0E67F0C571685
767F2AA85ADE4E0104A1C777733D5E318A22A9944336E5B98D965E50D31F357A
8B6EA5A0EA98E1B027CE68C2EDB149EDDD04ED74A1B3D206D471A0C11C11449B
DE190BBFEBC08C9E1B7513B43DA3134D6B11A2516E6E86B67F68C970A320D05E
94FEC57FB347606DF89989C33482BD09D011C55AA920319E7B26A205D3D0F004
22466F09C0482A164CFB27EF6ED2B040ECCC3DCAF345B5A73676F193D43123B7
72FD6CFC5E37930E61EBD5A6307E4DE70194E6384EC0D79DB6AD86D3B319A31C
8B0589D0FE28241D8ACE280D0530EE99C80723E560BB72AE9D53F4713181F491
344B06D3027BA4E9E94D4305BE1D817197C54C8FF56CD6964165F6448ECC8A8A
64B48B4F0FD69299A137589E2491A283509B21A3A5772F75B7602A9F60AE559B
07A58436D04222C73EAEA72DE9A5A441F88D27C11F4F91255EFE280E91A4ACAC
1E98A4E5E6C57B9AE86FD218C3CD8F24A4104156A80F13821384E529783C52C8
78B94AB3A0096090867ED32E8A30980E737922037F75F062BD83BF4F5929BC51
CC22AEE2DBBAAA001CFFBFF41D258424FAD888FFF1BEAB796A44E3126159E120
7E4025C676CF94888A1971AEF8B6764B3AF4A92D36FAF6FC56FD049710EE3782
BC2CD84FE2473F133BE03C1346B875463F126DCAB15C7A9BCC9A727D23611462
4E8D2BFD2466600285D79518712B8681ABCD69608E6AA9578F7BD771EC36E01A
5A17BC17E375020ECA59B43790ABEB9DF5F4FBBEF807E5699EFEAC563E1ACC5D
EFA336E75DE6D8248E9381BB110884FDC89C2F9A41EBBC9A8A1F98E6A41F68BE
EE30E25CA148C1EFF42DFF8C214A6537AB11F260B8C329A4947B5FC8DC9C5622
4DF7BF4FBFB00380D47BABB03BC30627AA74103E553F55278F538EDD8C1E64CE
0F1398CA0AB5A86630139B4A7E8FC02804CAFF3830114640AE50D2FDA3B561B5
C63AD7EE3347804CBB40FB1E77A6C89735DD870351C3A1811591AB493251B904
314F65791963C0412377C1D02362C5E9655F1C3D4803CD379A8EF24C48218C2E
DF1165840462BF37DDE1B8D5FF09FA2C3B261E2F1A65ECFBE5D4EAD43B52C029
EEB3948CB8A252CBAF545C8FA1C31E920E23A12DD7222CEF2D2A513BD758EA13
DA33BF5FBF1D734653EB83DA2D374A5B9A0CE316F24EE375D6DF6BDA49954C2E
DB25A88821193636119D469BA66E5DAA9C92520FD4F84426A4E54273FA469084
7517817A6EE3E21176D333825E88046F50B3CF6938AF9BA79A2F51398239EB91
1A2D07F7FCD948427FF62F40FF95E39FE1A1AA8451411563FD5388472251C155
69BDE9283B41900B21EB1190D06E6B13B7794FED020D2C1BDD205AE77B084BCE
EF628249398B496DE85B406FC2E1939EF00DFC84C07E26CF72EC401BAAE756E5
7F6673216E7560D1C2A723CB405EE5CA474A07F61B81F8836482F73DC9516D67
CE0CB770EAD755B6B356198B4B97EBB29C63456953270CCC8D5650C1D006E69D
38DE2DFEAB27DAD50A817F0D645D30AF5B75A7B53CBD3D2B8D87BD0A7E525AF3
22F7ADDFCE31716914C2318260C2E2B4664893921B68C5A93334A361D94A759C
0D7B146D6FD94F0442D672BDA0F6432E18F3C5DFA37ADA378D95B75F413C9ED1
BB5C606A3EC7DFB3F796F59B0478C13FD1900381EFE0BB5242D5B5D34D03AF1D
4BDC93EAF8020E26CA23C8B0E7DDEBBC6762A557067A4CE05A524188A8F02E2F
3625DA38DFCF381727887F5646A3995A8A38A5FB1E5D5EBB395FDD0B7C8E71AD
B48EEDB62AB2CE99D121435EFBBFCEEA69AE9ED8238B60CC7288DE33C766CDFE
15B767B4AE2E6CE0965E77272AC9F86023DA620548CFAC85BC751C44218A29C9
849F1C2DCBDFAD895B54E51A569952ED50F82DC8A19F367E7E44643854EFD6B3
FCAEB04E55E4661C82D31E2932611748480EF61FB2FBFB0CFB940BEA81AFCD84
4C6A6332D7A600170E38A8EAFCD4F93DC153C43175434C86BC747348FAC61B76
1FEC9027C1A193E55C80F1F20B5317AA0A05AAA36AE235F6E49F06E570FEE798
84857D7552EA92EF3EFAD52DE39C2F8F43C59E3A957B7B926FC95FC4B60186DF
7F3523EE2AB74E294C8C4BCD8B4975E84849E0FBDA6C0B0F24A636DFA578B122
CF97BC5089E21E9F5298D1C9F30CB8BAFF6A3A11BB4D9A0A5CF2B18D055C44CA
4FD4D8FE1AF3630907DE7E585AA811F9CD11FB2C8FC791851D651009FA5DF20B
3C33FD2FF848A9E3F5652BD294965A332DD3F246C91B0ADA34017FF2451D1394
F9C3C95AAC6EC8062BE98E8914D51DA6A164AD13938693D446044859D03A949D
F9AC5DF4A000CDA98BB516D762CB9F6D44B5268FD0C26E88BC4A760C0F75A140
DEBDECA4F511128B7D2805872160C55236F0A0FA7637FF0D4E94AC079CD3C8A7
D03A5A56F26B0438B577C46011A10532FEBCAD14FBD6032E224F45691A726886
56F305231EB2FCDF59C8BBFCB5DBD2D093A0E84D62AC93A2312CA69295E937C4
8DBA1802B85F54B5E7E6D6216A918F911FF705D3B5CF055F1D873B96283A0B53
59344D910CD396D883F6F7836BA65FAB4393A773A8F6BC298069E5BA38210EED
49C9D920F718E3FCE692527DC7CCE6963BF744F2C91BC5952564196D60574E86
87A0FAB21F2DB2BD5A51D7FBD8FC19946D24E5A228462C4772F978E650ADCE3B
8D66B9C21279C531CA1C3A8ECE3420BB65837287A7222CC3673A2A5F8BBFDB60
C719CD073EF9A23675198462C7C87B24CC92D6AEE5C25AC63855CC3281494342
D28F3D2FDE0C183486769A4FD5B0143193D31FCB2C2A14E487BBD96D0BADBB64
D1B56021C363A795BF10E2DB448261C363A54A4AC1182B470C457AA82DF3F5D1
F4B329806141EBD53CAE309319B94133D7EBDC2D0453A905ADD207364371E178
0A95C2686E3B34C4A978BFC0EE968C39ABA00889BC5149162C2B54483D44FD3B
5CFF41F611C7E03B94945F414560E874D7CF27FFD0630890D7D7EA66CBD15448
229059E1C436BB33D69552B5367AB5D53591C4678D0C704DD3EA23F5D9E8A7AC
17D003C19E333E726FFFA2961F33C70F429085F7BFE3E2510F59B78F58B19CB4
01B48E184BAD9020FECCE3AF52048A056981DAEA02AE78197E65855DDB170616
F54278395D9EA50DC83761AE759F9CDEF9E1948E7002414FC05286ED793E6662
3347F2A9AF8917493D7305B92CF93E8E9185F70015F5594084298A6C2F9FD3C0
689F262AC9FEDC9B89577ECDE92F08D3142209FBCE7B5C0A840CC767BCA56C20
4E4E545E2BE4D21C53855CEE4CD0AB35D1A604C0FFFF77DBAE4289752276559F
A05FEE65F45ECAF44E95E23FAB6052195C7948AF0B1126482D4E02D72BF8AB03
DE0F1A632F7672AD9DDE70EDC82AA993678A82BEAD0BC2649C4707FD8509810D
364B5C6FE0E10772E95288C622C2F06C634F4DF8C7FD1432BC9310D5F24FEE3F
7AB324863D6DABAA1576E70643CA79EF4D7DF4105093D66CEE0F3B87D2164A7F
26EA05F5C4645B22D3E1BFD2219657712C168FD90DE801FB0F32759E80DEC1E1
43CEEB19FED12D757205043FC98FEC62D6A8D8B97BC083B4A0E985AF7850D6FD
8716B9957C1C35A0675BC53DF672C425C79F43FDABAEE7D63F092CF271C9A9D7
C41F40C4189510987887942E60A412B3EEC84C9A6E1AC7D54D528F5604B72C08
94B7882621A5BF1F325B92FF96B80878CC550D1AE4D8196E41CB1251856609A5
C4D3BD05A922D0D45E039D9450DEF8490A3E924E41434194910BF60BA1B08BE1
B41824345627745541A4F1703E956328F6227D11C74946B38CFB096139979E56
4E723B889B44C6D78673868C89912F8B4F0B4B485F1587A637B630F92E6072D5
7F3B44EA6FD96BBD4FC28A6C1D90805E3BE3E42A7BC9C880762966C55BC04E01
204D083AE976FAE6F37C94F27E68F8C0F28D52B17F6C0FD7C9150701FD78F8CE
B8E8DC9260E3974005EB5CA728171F482D765016C94D4ADFE4A42EF42212BC56
7E4EEEE8B0D2A7856CD4E44F55C0BAB762F92CB8D64C17022D4BF3A47C12F5E6
279FC23101FEE93753653CE8CEDC3B75C9CCB29BF1D4554C6120DE8EE750FCBB
E38B5D915206974962E320362E59B3F21B3AB1875703191043D03284D4467346
CFF2F98CEB4845B73ED8E003E0DC94251B73E13A9B51A3F1430BCF6A21EB9B7A
65E17FA411F53BE6432F1506232B8159E008FA257F884A4A01AC53BE91754D78
BF14A5B0FBFB9C31BF4908355F8A762052968DF526D118708CCB0B7CB5BEE285
6DAB6CD2E3934178E60BECB11AAB5478623CF6C50C92F8BB5D1A583609028FA7
B8A53B791BDC9EF76A124F3F7641857E4BEA0837CB36176EC9A522EA7F41B8D3
63C37D1145367BD300F17B54522A834BBB74DE12BF9EB26ACE6F24A046D58F89
4D4B7DF74875F1A0C1C9D97BE0849593D7B398EB4B00BEBC8C8D1497B6EF831A
A35380FFB7F1AFA4D888AA52C9482E8B1755CC209905F98F40D95B44D4DCBCB6
67423D1BC2F3560FF0A8B4F0CAC352A4EE2C1D946E45AAEC8A6AD40303F3382C
DF0756BFA3B1ED64C169E56ED1C760F2FF0E24DC5C9F41306EF8D2628153D30A
5DCB0791126BEFD4947D7EF08301FE015F2B0008DFFCBF9F2D4D859FD43EC7D9
C5BE237E9BF6665B7B1BEBB362F0C0C3A8D86010B9C97FA741C97C2E0513386C
9C26C235B14DD2A58BFDAC7B5F63DB4DA6D5D37D0098175A9071590E1DF66A3D
B8173A047C29D7D35557F06132CC920B5460B8AFC11D23D09A4E45D089F5EB51
963FA1A6256E359D485107FD143B2BF21FDE9DA5744BC2615E86C31C89470CF0
D06C6397D9FCCB316EA9989430240759D2C4945D941F159FC02327F34B042BAB
B5C3A47C78E8C1A6FBCD396B1A51CC4B020B8AD401841EDABACECDB482D6EC5B
72D2BFEB4556720FADD49D07307C8B22ACB7E310CA4151A85C71EEF70E8D15DE
B3B00F26E0E166C14647A65ADA228A3D1C89025BE059306565DB1B1EFC37D358
8C1EB024254AFD049BA977BD4C2C605050E17940A89D0D4C5D963E792320F5DB
3706682E03D25D9E02487247819551465092CC22B6B56E93F3AB528038FEC3F0
668F866707A19B0463BE706EC729D2EE1653AAC7E29BD25BFB3241D4792F5152
ED415B4E7FA92C2EE5A22E27E8B75542C492E56D811C192E95542A6FE0BFE5A5
69273C2ABED4300D491B92D2AECDD278404CB84B1BB1BD7AFEC858215837D118
C0E928BE7E07CFEEB51A6D21375B772B8248C994564014015232A0DA4BEA1754
3274F407FED0837A236371F1A32056240F2015B1E7F4B2CA72C6B58610A66F13
407CFFBA5E0A2893C1F572D50F51286E9133B5A84239C9493B0574E77D281D01
11D00683354A000C9700EAFBC1FD104EA19DFCB87470190E7E2CE26E3A6FD0FF
2620B87B82AC8686B6206B530F17E9348BC7D04B948348802CE53A312443DB87
4DBBA5313A6A2A8DAB8A1CC9A594FF8C299281C0A261C8CB2226B732FBEEDE40
2C6ACC74A1A61379E2E1CD5548CD908268A32FA83D8504C442EA0E183ADBF7FF
9FD09C037AB03516ECCA93FF048235BD11A25DB07F164512A079C5392AC7F889
CE96AE5C8D9580BCAFCC087C35E76EED1A671E87C12E3045E15A687134736DF8
DA984772AFD189D68571A2ED7256F1E204230E41D3D9DD876F938951714A3973
0CA9310489F8E807C1C7A4E51AEA5BC030610A5D7263FF7E0F9FDE3E5E37A362
5B919000BD94D978583B942EB79CF2BEAC33FEBC9A67272EB10865BA8FB75FD7
9D280AB59F91B96C16C982DE848D76D8FA8620DFD7C80B7DEAE7264350D6FB3A
EF04794DA3305844A7CF718F6D1A4A3AFF6826173A076A1372ABFC54ED3AC6C2
09C9287FC830556CA694E21CA5342ECA7B10C90AFC4783D841D7B1E34FA3DB7A
2B706F3E21B0FBAB23E7257962FC3BC309CEA2C7239A9D6B44CC96825115ABD2
AF9A2566D2F3382C01569FBDB94C8D664A5DA0F7DC3DD140CA77C743D7BC1420
324ECF9E4780280EB119885E96A6C619CE3C0C8E1E264E2DEB137E5DC8149786
486D65667ECF47B1A1E20E9E6E4FC8323E0BC8E61BDD3BCDFC6575C69C03E31A
EFFC290472CBBD049DE3F840AEE37A2486034240F80E75D8A79E0762377DF660
52B12EAA16D678990B11A9BFBC03C1D4FCDA9FD4FFBB3E88352438102F10B7C5
9F04C013B6575B5E948FAB58EA691984A0E54E6B9F3F505FFFEF74D06FA1CDF3
4B8A95904C8A2763AA8AF5B71D00F5DE09DC1CDF87A08B6D181453063E14C12D
B7BB3775A6E2A901636273D9EEB833EA8CF20FD83AE899E28DADE10EEEC20BD7
BD93085A4B1AC80AC1AE8280C14767F1A487BD066007A0D050317BD081131A14
6EA0898ED59E46DA7B6254BDCCBC660686E2EDA0E77A705A653733BB5C5497D0
B130359F866CF293FB6EF0C2AC5BAA2DB0DED045E2DED3A2612D078333260359
16CF0CCB272D34767EA069E0F0B0D42327A18529D72E890EDA6195C2688438ED
E9ACDBEED41E81CA8EB5E43C2B09CE266EFCA03F2D7FF57F12B06F9E54FCC6A6
546676F6FFC5B8B7D3F0982B6FF0D21D949309F0C0B175CC1D0976F8C55C6AED
6E821C39041E22D91AB30922F2B2EC2746BC7DAB484991542FBC82D87B487507
559AB466F73EE23C2D3194DC5CE4C9AE66D3164613AC5CBB3DB501B64DA7C91B
C7ED2EE9027FC0906820B35D4F2CF66C4F9CE4A884B7C07155BCA884ECA5EB3A
ABB83F84DB1F5639599DC7D3F51241AB5D95C3BCB7AB1EC90B4BC989F74FB354
04B2D7366A34D335A47B8C00C05CB423482BF6C7970A95545424A08AFF9A035B
7F83F52B65A9799CE76E303B85664B624C65E9CA58184C7BE2BB9D9C86A4DE5A
8165EE3DA2E652B5022EE7893896BABD88931DE1D538F615787645DF5ACBBA0B
A8E5B899A37321AA7D4B283AC9234978C2DD81813A1EE5DB6EC170DAC1B6EF02
94892635B498765C07A38D2E9DB0B7581B11056C28278F89B0E60998379C07EB
C0EAEDC32AA69B8B836F92A61AFD35688315B2C3F860632FC13E4BDFB63214BC
41CC6859EAB3AC3034449213CAB99FA1D216563419CD6D6CE4E1B56F33E6C654
7AA9DCB5B05FC068DF02AC32408C8010AD004F6CCA9887830927F8CBCD49CDB5
18CAC1EAFF815FF2F6F527F936948201565003022C6C7390B4E3C2B219FB4F76
9F12BD25CA7B3B61D1A2F8DFEE795D04D5428B42FB66E0C254AF7B7A10CEF7FD
E5ADA5E217BE24851180E9A1700FBA66C7D2B0D7BFDE4F4EED1D24B821A40947
5620363657F6D048E651A689822CF815E72FC8AE9D835BE31D1DD8B54C9A717F
4DC319B4B59AE073936EA40B070524C7E71D5A7B64436DA107749746B516E29F
E3BBCB8F8C473E706670E11E5B221716F315FF097CD1841D0069FA69EA1898FF
9F9EC2518C77806A19730C97F54BEAD10B4729E5749A10EDBE644886443D1249
2C8517DF8D8AE98E2882439FA81903941B363A7D885F93C6DF9E1FD89F2F8CEE
B870C409ED13E78B4C914813B0A01DF8F876EDCC4F384055FD37C575726AD69F
F23D50EC5BEE2FB95A44F2B2E2DD94C933D90BED2C97B53738B4B2ED56EBE617
BEF17B9DF4F314A37F10FDE34C570D7BE76A496A58242F51E7321380CB042424
855F4B53071DF5A0DA5A31B8AAF9FB4F4C491625FF8FD008BD4402918043BEDF
77B840B2BE0DAAB4EF904FFEF935954AFB9BD2041241B1BC8519EB642C89E288
479664226DBB6F1171F9EEBC7E1273D0CABCF6B1BF7F26AF21C21D9B1B916F4F
603DDB68D3614B86566FC91D67AC3F4A4A96E256FA1A3BD35F4465AE4EC64D82
34BEB4BBDDCEEBD9A89D932E55F14CA2776F927C4FD3E0920790A57DAEA08C5B
169A3E2309DA6BA8684A5D1DEE81415796E13DCF906FCDADB092047831B16841
B250CD148557D72DD7E683BF122B38E2C4F614E59B395D1D9823D7D5F126D932
14B50A37FCA7120F8F3A8E42134F1B6B0C248D56F247AA68FB941839F600F61C
14247EFF780BBA3E5198D37CED44DEEC3455048FC451BCDB48DC414AE5293A60
5A59877D6A42FA7AF1CD28488C1FA0A2D5D57551A68A6479A8FFA785C2BD2D32
BB5F20CFCD667AB094E382D582BEAD23DF0A82CC481E2DF2F7B0CE752DB13736
3373816937321F70D50D6D61F24053B2D53F0D9435B8575DDAB8AF9358720367
9A974E13D88C63121A3196210E0C1363B06E0C4CB49A374F2A0C163CE0512B66
7AC78A09A780813B1FF02AA967B12AAFAA0C4E797EF349A0EB76D9524D9345E8
226E83D3291C80B65FD333DD6A1DFD3F3CF2476231B11E3005F3F94074622377
3C8BC72E954983FEDEBF29C468F87096011695C9560A545A7BA4701A5EC8A569
2BEE65DCC402BF29369710A3A035AE4C3506E6C02DD94BF5D211346FA5BA421F
382275F0BA6909F82A9F416B6672A426B3BBF0BF569548FD8F05E6C0D35AE05C
318C40A487ED95860B98050A8C53A75BB461D32E354134D3E9CA3F5AFD8F3024
F3B662231E4F893C9185C0886B541080655BC2DD63522EFA8A4942B6B90FF9DF
7D5326862338562D9039641247C5F33B540E92D6A19D307A2F8499B97F2312B6
455CB547B771F0F0E1628780D69E25CB2C0BB3B0C945159998A4AA4E2F37ECB4
733D35471A43C4AC733BB92B64091D3187C8F98162A878270D2FBEE37AA23033
0D81EFC166DFD535AAF6F8AA6FA28A2B5FB9653BD398287E439A0E82C746AEB7
4F82A66063942F6E01676FCE943017739169757D5C03285576C4B1EC561BC102
ACA484EB4D0EA5073A388798FD878DB9ABB2B4B5ED0BEBBF4872C27C147CB132
AF320AEECFDEADCA35197032D3529D9140ADD2348CA838B3A1CA68A22C5A5134
CB03B145E5D0C0F7D8416730AF4BE4FC931E965594E033299AB8431BBBAA5E86
057757808322DF216865D48D4033FB6C00C5A8FE4A6821D4B1F212C29ABDFC67
25DD6622182633C428423544EACFAF6F4EFFE258C053183B1F883CD2C15E43BF
7EC95C16EA2341D5A105496F937B068F2B8CA0CF190BB8C626764735A976CA42
97F954B52E2359F21329A0CBF5E69B65E0181D69369E3CB4C4EE00525372BDE2
29F1C20656040FAB3B9A0DA145BFC4DE410CAD5E0E006D2A7EBEEED0681B5DBC
508028ADCE8DF4408675ABD230CF148457FA68D0DF3F4CADFFEABB3077E8963F
85178B421B0DC4AC69692F86BEF05A51E7F50385C4A16EF235888F964FB4CD74
33AB2432505624A83CB86FC4DABD3FB9B4CE1751A5903126FD80BD493627782C
24ED1459BE2F7EC3151F50BB9D5C0D6ACFBAFA134AEF156FC4AB8254E49213F3
A65E698F73A56C086FD9F9CEC5903DE968A11E61AF16CE3C561BB821C5577F7A
BE924668E6082A7FA861500A83FAC09E1E64317C2AF1A857E546F203B809CA9D
4B06A05899F345E2AAFB1928A9B1EE1D90B03C9F7F763F3C9742B3E5A1633C64
A493DF7367F50740B800A17829C8A8DDDD4FD62724FDBA79EB8B879CD72F692C
A4B185DC2B8655F59878161BC865FE39B40735BC7321DEC56AF01DD9DA32F6BC
C2EBBD3703E9EA18F1329E2B7B440C27A799482375BAAD921FB3992112657DB2
1DB06874CA6EC92FA9101102BAEEAE5C1875DBE42C23E2D3E208B70A82F3812C
B70902CCC8A0CED4EF40A73D06AE2F233B284EBB60B62D8A138CAB931B81EA65
035A3263395579F2B2D33E0A136C429A9D806C2CF8AF670C6EEF544CCF26CDB6
FF82F3378CB493CA2527D50A9601D6A1D7AA6FEB987470CBEE6B16CBF7E8B1BD
111E25F82DF06C8C3B0209EAC9C31BB4D3595B35AFD87259243B06CCED04122D
1FFF56BEA97A9F11898AB9A7EC2C36189D8607567A43C7338D7CA3B87C5473E8
40A09345A08FB3D60C50B4F8ACE22418F08755BD425D00D1D5B53BF96DD9520A
27D96B1E7FD78689111BFA6B2D1015854A4283BEEA04EF134D2709B24E10F6A8
31AAF04FE0920B3B375C410CFB8AC6C99D8665CD7E1CF880F99229AADDC21ED3
7219ABB9D6458C50626B09F5119605247DBD28F9D36576B70DF7A0EEDE6E2A42
7ED8B558D0417B94BCDBEF519508D9AB7F5B58B7D883789F4B36F761C34723FC
8529F41BD47714C746A342B16C33EA16A99994E9EE69C2543EE7F2FA7E2ADC18
5C844E9F0246F8CA03BA84311B11F970273E26F95CCCE957E1D6A2A9559819B4
786D1446C7EF56F0BC4307C6A4AAA30A692BD60CF235074461EAB3F3F597D945
39A16332BF620A6000ED58306FA9A87822B24F6C0F14DC71F370381FF7C52FC2
B85520A70B252F93DF08B21F8C3B18CBCA42FCF1BFD24FF0377B43E5DC9DF90E
F59D26D5A1335995707E49C98480D5A4D7ECFE6BB88296E8280687D14523A181
350D6EFBE60F49BC5BE6C356CB33BD7BADEB85AD930B85D26009BDFC592EA4FE
FFCB7F92FF5BF63C4338926C627E06B99C73D440D2FA300C3C3D06870C44BE19
3837418F8F127DE4EA963E2BADDD40F0E2D6B4C7A6EB8752D60901D351BCD08C
23B1841E08A06AD270825B0EF286176D7AF38FD2923A2BA43BA9064D59C171AE
87BB22E47B1076FC2EADF44E706DE035D3639262389A26746896DB0A2E38EF45
E66F2167672FAC98D2C9A6ACAF16A3BF71E4C894C954F849A8C422C060B15F14
E30E6EED9D20E96364B1D0C5DB3674314AF80AE4CAA0C3E2434F70FEA9D89B44
9A719D417FB7B8B764C487B31B7B628D6B1D47B9C31DB83B0CB9EF76735C4AAE
36E6949335A6E68738E5FD9035E66513BFAF296ED3F4113F1D31C5BF2AFB239B
5043BDAC0542E6202B203129969E4E7A93AA0154FCFCE549F4133677FF06C973
F989BB2DC8F8D2F0B349E855754BC800985A57640B2B6105B2D2C996F6DEB2A3
F373E18A9DD16830E2806DE4BC8000E49A10A5CF74EA2B71F11EE71DCB66501B
B4E9E340BFB3CA7BB27DC325BEDF738EB6D550863099C9AE6A1D3DBB5645F59B
4564DA6C51C3F01A4B69B445B57A6554BD7B8568084D62D6FD6E0F9704235CDB
62D70D9A99A6B9636FA44F0E246B1132BC6AC99E0C40E40A4275F185F8BEFB27
A94AB8C788BEE632BFBDA708EA130BD2B116E3F284231DD94E2A93FA82D2FCAE
D2A7D45E5F98EA6F92E26AA8C2C37A1102D52327002CE122674E4F20CBD082ED
3ACEE0982DC832C1C91767D1699F80067DE6EDFAEA75671A293A604E77AA537F
D8803CFCF9F7A8BCCB98EF11DE8489E1299398E37A4744451C50416D40A4D493
96F728AC68EF1EF1162B6529D925AB5A3CC37BB2F21C88FED65A380A782990FE
26BA98A9B13DE9021BEA3D463E8F1110597D08697B65B105214BBCB67666D42F
6A1E95479B3928A1A499AB2FAB9DC7CBFB2DAD2E777066216496180244E355B7
310A8A2F2279A0ECE4EEA7F416E81E58786945C76B5811D5524A1CBFE07D8E4C
DFFE9BE62B5FE19F7C6514B2A3FC5E21AB2DEAD6CC07B4B2DB4819457BE1FE67
70BF52375969417438C972537FD1B43C2A6EB520F68EFEF3E773570A86E5A659
BB70AE0FA60AB6CEC2B82984EB136ECA5AA0ED8A0F0211B045663C2DF14BF8FB
5DB78CD094473EF7B102A4789FA47C24B90AB19A5A09809DA7E329E9749E94A5
93F65FB84D60C2834A3751E47305DD77B0F3B9D63923541252771658C477EB22
05271412BF714185ED2259E8500CA07690760087C1EA786EEC436508B39F5952
92D123824204A604102246ACD6C91FE169A334736D24CF5A5B5870D5EEC528FD
279C1E9CDCA3C283A413DFB25A5D8728B8EA5BBCAC05DE9F685ABAC0D853EF57
5EF28CDF46C432BC993C04D6A5A3F74ED603CD7F1C6C436A3DE5032E9DEC8B5E
56AB7381DD577BF70640408BBCACF02ACEC4548B27FF62CB81FA8AD89300D424
F7E35C4C220AEF9B9CB17BEA88626269C97B2B3B15F980B0C516D861B0E313E9
38C8407A56E7DC8C3CB901EB6A07E1BECA9D58A2AEE014D81ADA5E61BDE7895A
730EB37787D7F7EDCD791E321F20DDC705215E25A712DB6643636C308FB26006
15F7896F6FDB310370C9B409DE4881B472667FCF9530042015F1EA5AF1DDB083
0D91AA760E3C570302F322BA696012CBF1F38AB1FE98C6DFE43DA4711F3258CA
67090ADA82ABEBED93D19964D60F85EE2EF6EFFA9A319B9342F6939688C11F16
242CEBDD2C0BAAC16A366F2BDEC3A5964E8AE17A776ABBF7AF3AEF467ABACC49
4EC3D49B7F5EF0E4FA63A568E49607DA37D86CB11A415DD6B7F92DFD8F7FB9B6
BDCFFBE045C95383571422292047971E33DE068BF5903937EB7A043E36E6ABB8
B24A76A0EF752F42AB1A78D4951C5BD5CD1F73FF295A88BCE31B5D601CEF65BF
7EA36A3B276A80A5DC2CA38079452C2C018FC00CEBC04F7A7DCBB8246F42110B
5C711DB781BA3923B4902D717A870333CFA7B735E0CCEECAEB18EE7973898ECD
E8D47B8BFD781C4939D5CD97A2B46996A01D527B90730EF19661FD558F64DFCA
21E9543248C32C33BC9BC622658975770FDDAE15C1EBD6B4E93F31D5FA405D71
BDA33A4BB3F2C3D7A8D0A456D291A0E2B90EB0B517326F06984889E724742C70
4FE1BD77FDBB66CC444894670F88B713D62EB3FB5B1092474241F59317F44AC4
15D5A8F2A558D81D1A15620CB9011F729054FAF1370B7AEA46195BB65C2ACEBD
0C857A7FF803192E766863CA5147AF6021811562FF7D2588CBDF0EB97EB387DD
BB4E60CDB8593C7A2F6256E0591120060E27D44A971E884C6B47AA3086B6143D
D07BC8A9F8B0E3C38CF11CC5279D10AB5B0EE3207AC20CA64BD56BCE20958225
E1D57A0B0A59C13268A567C4A1BCCD57DD55974FC3F5495AB59ADD5CB830B70F
8174EC4F70E35C1062CEF842F706A51A481AA86CAD34AADD87B40A0E8BD44B87
1A80DDCD5527E230E1822400E12E0F8FD98191A4D736A16CD1B5B8C999A7DEDE
67E5DB6137B944FAF741B6680CD150AAF891B0972DD9039D927DCDCD424DC978
944312205DC75A0952CFBEFB86FEB7D75F4D71DEAC8EDEC3DB5B6E2C0CE5F16D
E76F7DCB691DEB2784E4F07DE2D95319E59113CE8A3D6DEDE986DA34D367C075
0703CEC22E0D2DF965D619EAB02BA6A04EDD34C4BAC7848513392ED451DC4AA0
CBB099BB4C5A413DF68102AB2C1EEC834705BAF64F8EEAF964B598FFEFF800E7
A81A368B451CA95CBF9AEAD401CED971FB029A4090E5C72F39E52ABD85BB9DD8
46184B21C022B989CED1B8072D8E50C3223F7EA054AFE497D728B652C9C47EC3
96A6AECFF52B1B97F807E5AB84C04198D071370C05A38FF3ABE391F9E4733B57
401C4A861DA51E737824C3972161B548B21B24A15C0C293DD8A7F8FB678DE420
2804876D55847CE2C5077EA163A6560A9ED21F4D2F7483475C997A2712A3A89D
3186DD0D6968328D37D2A8273F56C26D85B9EB2DBBCB3FEACF3AC6096743B097
4C0F0DAD7D9300DE0F816B95FE4C2DCE573BD7E67EF6426835A986459EFDD766
1270EC3A13A9FFDF6F918E912D2E36427AE658D813AC5129131C637B895375F2
0EB3DBBE15A2F0201D31E6C754E801C7EAB00CC60014043E23A0FD0C90040234
66FB8565D7F2462882E62C2F14159E7DF57A8C8364CC7E9E2C4FC62BFA8CE492
AEA628177B1D589AE2BFA14C5B81AAFB545D9000AC474647F2B899CF8C206524
E579B78A7D496444659C4482BFF0E98F69E089B1EE4ECB7798B50C0FB8817064
18108940D85498E698B18A8EFF4F28CF087557DED5C8A51289DE2AFECCDC3D7F
89405C7F851C632E2F74AA2822F10910F2951370D2839C9A0268B732128680A1
32245041D06A122990EA5096294EC40EC00C947C89FD228F554ED13986EE30DB
3DBEDA90C740FE7F04FF7CA2F9842DAD40E35A473B3D243EEAA9DBD7AB26082A
16F1ED0C2DAAE954D88F233AD0E6CCDDFF1AABE47634AE8E7D64E3442C0A00DD
93847637FC5A1F7792514464C7A5EC9912AFA8D78F340B8BF53766207024C513
DEB9B034AE203EFE3BF0F0A0020CAEA751D8BD87340B9BC3F618E83029CF9A6E
740689D39C06ECF771BB59873EEDA05768E92E3BC3AD3ADFF1FA07A47CA8ECEA
723DB260A13AAB0BF52CACFA3D8C0536C1A8179938BB66E3E56CBC5930B78755
FCC0BB3633E03185A6261C1319F4D5B2D0A6A1B6C3E34FC73CA170CDA0840BBA
B6452FD3876A83184F0F93C905F7474607B0ABC6F2DEEB44EEFB2919EF2FBBEA
4444117BAF0C2BC77D1F3A65260DC9DFF0A484A85B6C903E12D7FCF896B6BBF8
4E29CBC15F2F36F224C2B98381BC7D6A1842A2FE138698011647116E728B4CB0
36DF43C34BE44FCCE6FD58DCDA0ACE131A8DB8BBD074EEF8F23049753C4D2517
5E09520989EDAC2B8D65F96709542070D12BD62F57707761D56F30E0DD0399FA
BE7810713BB2A78C2AED9C7D98A8D8C3E847E5630B56BD060CE2037F96988F6A
3802F9DC38D6094E05DC0A32BEB5116BED8D1CD1C96CBBC32DEC6ADDED78CEC8
6FA525B8C85C7113F8005AF3EA7A6BFDA7BFCB7F37873249DA283E4291CA1809
4DC3D892217147EE65DD0DF74E7051080DDC1F9F9CCE8BEEB64A681CD0FB6F11
BAB24F0BD3DB16B0E39F1D40928F2398F8058184A8F27426B0FE2A6483DBBEC2
B368CCAC398B27BA89D3DE9E9E4F09E55C206C242CDE4FD0F111A5E94322BDF4
117E2D825E4B1C61C2486B80C5011AECBB4A7923DC838F4D06CFE4643C390E00
3D79615663F92EAF22FD911BEA2D939CE4A40F43E0AD831F2AFE6F36CA921865
C2A33FE489ED1AF41415892B13D61B17218C110A0668330D950C84E2D95A9081
FD668F97C05F88DAF4926F6FC68012F5704056EA7F0B20F3FBAEFBF548647F7A
17B5FC035D960F9DD9F70845EAB49DD4D509AA20671EE1ED5242217182624D46
956A033B6D5C1789A3E536ACC8323FE00F60E2D35933BEF6F1745D822C0429C0
97AE3DBD4F1E94CBAB9778115D3408EA3A39976F8F50459DED5390C30DF8E86B
5DC69032A34915C867F6E56156DB706AB6B8CFBB8E99C0665308072E2C280B9E
E61402C3EE6499AA1BF66F1DA2DCE5CD2B89C25231EE8ADCB0D307542F56742E
9ADC33072BCD6C8F90EECE6F9DDE7265C7532E74FF50F1E8348095E41C7A5C50
8F088A2BC042EEB296D90781DDD4D47BA895BDC07EB641866AAB8E5558BAB02B
A71EC5A4800F36CC72FBC9A54C6C5615E6003A1EA80FCAFADDE983AB436428A0
D4734B7C3AFF3BB6AC1576DADC25CE4E815934270F463B39092F653BB06D932B
F993E750403C666A75AD10A63F29FC1D56F29F6A8A49A42377028D5B2D755903
B87F126DCF171924EA91A0ECD4D9F26784160AA46C72C94F04D609BC6C66E8AE
178EA47C4F4ABBCE01BA696674C7BB09C2F069E8D3B9A910BC31BD6703551A0F
70122D250A7D852A6A652DC8B41A0871AB4D9EE7BC685127EA95E87332613DFF
819451B35DF80470DFAD3CAB363B3C819A1E458872DBA46291ECA6121B7111CB
CC488B3F5DB01D9E8E5DB24A7075818ED1B1BF1D953991DB5D236E2D0B460833
1ED0469F610AAD575D0E68400BFA1E11B87181B55E08039F9DC382C24252CA3F
B14C8D07BB08EDA35E4A16E91E3C54A585F4C7C1DC33CAD7E2BA37F423B65B53
007AEE74E40CDDB154400678F5EA3CDF627E38108542282EE1A988009D436A58
6410A496FCB256E9EC59D71D2E76D488741E406CA6809E46F71DF14523AB92CA
C03B6C92B608C178B9CFCE5E0C1943B674119927E0CB19618AF6BBE5B9FE57D8
DD4C92279E6319AAD2DF70D272817226226494ED373D2C6EB2978B5EE4C98DE8
802C7B8DA2A5479E7A74A892FB4E28F1EB2846BC556BA3BEA27884D7E8F552F3
1B6F095054C99D66B140954FA7F14263AD47694786E971C334930B868DD9FC36
00C44B277F3AF5713D05A22E72C9C95F0DA7F95897BB61F001DCEA2C5C24D49A
F19BC4B67FD4DEACC4DA6098332EBCC67F877B26179151F4039E69F16276683C
1F948FD137E7D4BACB8CBF62F3ACB4F891CC2545351AC885FBBD7581C56E0839
92A4AE3FBF3EE15B497F5D1E2D67E043A1BB0DAB820CDA8AB298D7BD582571D3
B5040F1B0AF9E83152EBDF1F60C49A18409AA23B136C83FA43D6B5F1329A06EC
64C4C4B78CC18E86A40A9E665AA75A22C0B7D5E803F668089D4A23A5385BBE2D
5A71A6C73897C21F364FF14BD13ADC65CAC0850FA00F41D93BFF8F64D4B2F21B
2948A6EE5E3AA6132E595A080EA6D135B6F5DDA47E32D7304B38E11F79BA9650
72E655DAA659FF0ADB3E89219BFAD92A6E85682BA46C2E2DCC20A133F4B25752
0B364C99DCA1AFA9C4D6409CA20DC62ECE0F687D0058E38A1339D7F6410B435C
CD70128D9CEDB7D8E9426001C1202DC2E504094CCA4F091E7607AEA492549F26
03B6B0802FE6C34358CBB811047BE71FFE8D2E53F663C3DB50083A1E5D2EDA0E
EB3AAAB95EC67DCC025700000D152EEE7D6CF355BA2D22D6E0C31F6866A88B93
36A998E14AFEAAC0C7F16B6D1C85E9588CB66CCFEAA8D0A829E79CBB7B470906
D06B3202DAB5AC6AF2307AC66FA1EE9552C9EF4A679D84EB07BB9C86564E0F0D
96BA4B5E9610BFAD610574C6C216B8F1129AC3AA900AADE74ECC86BA5C6FAA08
13C234715C0058EBE917FC4D7B030D842BC0C4435D439E26BA92C469C61B182D
057C2EE5C42F3D5495B799C5ECCF0B825982E2BC82304CD80EC843D6C187772C
3972C839A0A710A050D1ED7F333E2D4D0F5055A4BA06F4F019B06EFB19D462AF
90210A1CD36266442CB18C7FFF32A9FB7FFE66FD82B6518C5046C8B5EDDC4961
5C66DB9202E30EF1057846A48120066DF41D135EE5B7B4B2610A3F595EB0D2A5
50FD12EFFFF95BA393A038D6561D7893E93482B0832543F74907CE76B5A6F745
B536A4331C68491D9CC9B6717D5EA1D62DEC95CE5050DCEC7ED0C40A2120D734
3EEB858A317F6B7FDE3E981BAB6E8626E7E9F363164C3ADE8AF45B1175DF5D39
C96691315C7C60D7B85733BF5BF9FCD30B4AEE509BB69A014607EDC6269DD909
F4C32500444BB7B8FA530E3B002418F4B6E8387F0FE6E06F323BD5C8CD42B1F9
92B68B7CF1DB702F3EE747DC30F6655306904D73CB2E4EBCF7018465C24CAFFA
FBBD7D1E317A81D797CE5B9E4EA56CCBFB4E21B060DAB6B607C20AC31380B885
1F9DB7F014CBE189D4E780A439B0A3780A21BE90C5817F272678007BA18E1A74
A022B5F64719805B1810B032CB021555B27D63A6486452904784DFF4A56C4688
D4C2ABC3DA2B398500DDA2030E99A629481C40D0B1E9C4FB13290B168E217504
AF0680DB7D0425F8700E4A45DA882E2DF6E750C36A2A3A9401F855602AA4CEE6
797C556E6BCCD036AE613CBC83D2CB6F1B610348F4E009352F0503EF6338262E
2E51FE2DB1356475EA90EC2A2ABCD14954A58BA5F5989D43967620D9DEFB07BE
DC8AEBD5E1257A4F83AD2F5B505D44F34BEFCFDE6D271491899614C262ABA015
0AE239B24F4BCA2FC76941A601B0212BF1CFC3B3FF70494C0C84D7D0A0745ACC
A2D822C1EE24F604D4DE30D6D5DD2B4DC3455B3CA72102A8724FD2B2E9013FE3
99230140C5BB2059814ACB3BB9FB0CE9826E48E41E98FC537C6B29F6C7F7C1A2
15A2340A04EB61DC562BD2649722731986B118557DE10C924596B2C8C30DCDE2
957F34D01139A4F7032E71086C462B79C3F750985E7F990D452936ABEE37942E
D44711778B607C2A56413F3DAA1DF67FF1086B9F3993AA298C74FD0799338E79
DA3579CFE08B357BDA06B0257375FF834F969CDF9934DAB6FCD59EF7DFD36206
26E3F64E5279CE03CB85D929C4B7B71F614517ABE92A6312866DA5C17D9BEF81
1B863C72
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 25915297 20426428 1000 600 600 (rx.dvi)
@start /Fa 195[65 60[{}1 83.022 /CMMI10 rf /Fb 135[44
2[46 32 33 33 2[42 46 4[23 5[37 46 10[85 2[60 46 61 1[57
65 1[76 52 2[30 3[57 2[59 62 3[65 4[42 5[42 42 42 42
47[{}28 83.022 /CMR10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop
%%HiResBoundingBox: 0 0 395.43605pt 311.68256pt
 0 TeXcolorgray Black 0 TeXcolorgray
%%PageBoundingBox: 0 0 394 311
%%HiResPageBoundingBox: 0 0 393.95775 310.51735
%%BeginPageSetup
<< /PageSize [393.95775 310.51735] >> setpagedevice
0 0 bop
%%EndPageSetup

0 TeXcolorgray 0 TeXcolorgray 498 -132 a

 498 -132 a 498
-132 a


 pgfo

 save

 0 setgray

 0.3985 pgfw

 save

 save

 18.22997 0.0 moveto

 18.22997 10.06825 10.06825 18.22997 0.0 18.22997 curveto

 -10.06825 18.22997 -18.22997 10.06825 -18.22997 0.0 curveto

 -18.22997 -10.06825 -10.06825 -18.22997 0.0 -18.22997 curveto

 10.06825 -18.22997 18.22997 -10.06825 18.22997 0.0 curveto

 closepath

 0.0 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 -13.6988 -3.40393 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132 a Fb(W)-9 b(AIT)498 -132 y


 pgfr

 restore

 restore

 save

 131.61725 0.0 moveto

 131.61725 10.06825 123.45554 18.22997 113.38728 18.22997 curveto

 103.31902 18.22997 95.1573 10.06825 95.1573 0.0 curveto

 95.1573 -10.06825 103.31902 -18.22997 113.38728 -18.22997 curveto

 123.45554 -18.22997 131.61725 -10.06825 131.61725 0.0 curveto

 closepath

 113.38728 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 99.68846 -3.40393 ] concat

 pgfs



498 -132 a
 0 setgray
 498 -132 a Fb(W)g(AIT)498 -132 y


 pgfr

 restore

 restore

 save

 254.16075 0.0 moveto

 254.16075 15.12515 241.89972 27.38617 226.77457 27.38617 curveto

 211.6494 27.38617 199.38838 15.12515 199.38838 0.0 curveto

 199.38838 -15.12515 211.6494 -27.38617 226.77457 -27.38617 curveto

 241.89972 -27.38617 254.16075 -15.12515 254.16075 0.0 curveto

 closepath

 226.77457 0.0 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 205.81119 -9.38159 ] concat

 pgfs


 498 -132
a
 0 setgray
 498 -132 a -100 x Fb(SAMPLE)535 -132 y(ST)i(AR)g(T)498
-132 y


 pgfr

 restore

 restore

 save

 245.00453 -113.38728 moveto

 245.00453 -103.31902 236.84282 -95.1573 226.77457 -95.1573 curveto

 216.70631 -95.1573 208.54459 -103.31902 208.54459 -113.38728 curveto

 208.54459 -123.45554 216.70631 -131.61725 226.77457 -131.61725 curveto

 236.84282 -131.61725 245.00453 -123.45554 245.00453 -113.38728 curveto

 closepath

 226.77457 -113.38728 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 213.07574 -116.79121 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132 a Fb(W)e(AIT)498 -132 y


 pgfr

 restore

 restore

 save

 140.77345 -113.38728 moveto

 140.77345 -98.26212 128.51244 -86.0011 113.38728 -86.0011 curveto

 98.26212 -86.0011 86.0011 -98.26212 86.0011 -113.38728 curveto

 86.0011 -128.51244 98.26212 -140.77345 113.38728 -140.77345 curveto

 128.51244 -140.77345 140.77345 -128.51244 140.77345 -113.38728 curveto

 closepath

 113.38728 -113.38728 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 92.4239 -122.76888 ] concat

 pgfs


 498
-132 a
 0 setgray
 498 -132 a -100 x Fb(SAMPLE)599 -132 y(BIT)498
-132 y


 pgfr

 restore

 restore

 save

 18.22997 -113.38728 moveto

 18.22997 -103.31902 10.06825 -95.1573 0.0 -95.1573 curveto

 -10.06825 -95.1573 -18.22997 -103.31902 -18.22997 -113.38728 curveto

 -18.22997 -123.45554 -10.06825 -131.61725 0.0 -131.61725 curveto

 10.06825 -131.61725 18.22997 -123.45554 18.22997 -113.38728 curveto

 closepath

 0.0 -113.38728 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 -13.6988 -116.79121 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132 a Fb(W)g(AIT)498 -132 y


 pgfr

 restore

 restore

 save

 27.38617 -226.77457 moveto

 27.38617 -211.6494 15.12515 -199.38838 0.0 -199.38838 curveto

 -15.12515 -199.38838 -27.38617 -211.6494 -27.38617 -226.77457 curveto

 -27.38617 -241.89972 -15.12515 -254.16075 0.0 -254.16075 curveto

 15.12515 -254.16075 27.38617 -241.89972 27.38617 -226.77457 curveto

 closepath

 0.0 -226.77457 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 -20.96336 -236.15616 ] concat

 pgfs


 498
-132 a
 0 setgray
 498 -132 a -100 x Fb(SAMPLE)560 -132 y(STOP)498
-132 y


 pgfr

 restore

 restore

 save

 -95.1573 -226.77457 moveto

 -95.1573 -216.70631 -103.31902 -208.54459 -113.38728 -208.54459 curveto

 -123.45554 -208.54459 -131.61725 -216.70631 -131.61725 -226.77457
curveto

 -131.61725 -236.84282 -123.45554 -245.00453 -113.38728 -245.00453
curveto

 -103.31902 -245.00453 -95.1573 -236.84282 -95.1573 -226.77457 curveto

 closepath

 -113.38728 -226.77457 moveto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 -127.0861 -230.1785 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132 a Fb(W)g(AIT)498 -132 y


 pgfr

 restore

 restore

 save

 18.42921 0.0 moveto

 94.49977 0.0 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 94.49977 0.0 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 42.42747 3.5198 ] concat

 pgfs


 498
-132 a
 0 setgray
 498 -132 a Fb(rx)27 b(=)h(0)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 -4.76926 17.80127 moveto

 -12.47116 46.54486 12.47116 46.54486 5.14568 19.20625 curveto

 pgfstr

 save

 [-0.25879 -0.96593 0.96593 -0.25879 5.14568 19.20625 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -14.26616 42.87877 ] concat

 pgfs


 498 -132
a
 0 setgray
 498 -132 a Fb(rx)f(=)h(1)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 108.61801 17.80127 moveto

 100.9161 46.54486 125.85844 46.54486 118.53296 19.20625 curveto

 pgfstr

 save

 [-0.25879 -0.96593 0.96593 -0.25879 118.53296 19.20625 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 85.57446 45.36946 ] concat

 pgfs


 498 -132 a
 0 setgray
 498
-132 a Fb(coun)n(t)g Fa(<)f Fb(T/2)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 131.8165 0.0 moveto

 198.73085 0.0 lineto

 pgfstr

 save

 [1.0 0.0 0.0 1.0 198.73085 0.0 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 142.67143 3.5198 ] concat

 pgfs


 498 -132
a
 0 setgray
 498 -132 a Fb(coun)n(t)h(=)f(T)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 226.77457 -27.58543 moveto

 226.77457 -94.49977 lineto

 pgfstr

 save

 [0.0 -1.0 1.0 0.0 226.77457 -94.49977 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 230.29439 -64.48195 ] concat

 pgfs


 498 -132
a
 0 setgray
 498 -132 a Fb(rx)g(=)h(0)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 202.88524 -13.79228 moveto

 138.63583 -48.8184 78.41826 -47.34273 16.35106 -9.45308 curveto

 pgfstr

 save

 [-0.85349 0.52101 -0.52101 -0.85349 16.35106 -9.4531 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 94.48476 -48.87648 ] concat

 pgfs


 498 -132 a
 0 setgray
 498
-132 a Fb(rx)f(=)h(1)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 231.54384 -131.18855 moveto

 239.24573 -159.93214 214.30339 -159.93214 221.62888 -132.59354 curveto

 pgfstr

 save

 [0.25879 0.96593 -0.96593 0.25879 221.62888 -132.59354 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 203.94313 -163.07391 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132 a
Fb(coun)n(t)g Fa(<)f Fb(T)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 210.81462 -104.17294 moveto

 186.8262 -88.25772 163.05383 -86.77809 137.68692 -99.39098 curveto

 pgfstr

 save

 [-0.89537 -0.44519 0.44519 -0.89537 137.68694 -99.39096 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 151.88501 -87.5896 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132
a Fb(coun)n(t)h(=)f(T)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 137.27661 -127.17957 moveto

 163.05383 -139.99648 186.8262 -138.51683 210.43279 -122.85495 curveto

 pgfstr

 save

 [0.83324 0.55281 -0.55281 0.83324 210.43277 -122.85495 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 156.9771 -146.10353 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132
a Fb(bits)h Fa(<)g Fb(8)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 85.80185 -113.38728 moveto

 18.8875 -113.38728 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 18.8875 -113.38728 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 34.37624 -123.82567 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132
a Fb(bits)g(=)g(8)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 -4.76926 -95.586 moveto

 -12.47116 -66.8424 12.47116 -66.8424 5.14568 -94.18102 curveto

 pgfstr

 save

 [-0.25879 -0.96593 0.96593 -0.25879 5.14568 -94.18102 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -22.83138 -70.11896 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132 a Fb(coun)n(t)g
Fa(<)f Fb(T)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 0.0 -131.8165 moveto

 0.0 -198.73085 lineto

 pgfstr

 save

 [0.0 -1.0 1.0 0.0 0.0 -198.73085 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 3.5198 -168.90674 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132 a Fb(coun)n(t)h(=)f(T)498
-132 y


 pgfr

 restore

 restore

 restore

 save

 -13.79228 -202.88524 moveto

 -48.8184 -138.63583 -47.34273 -78.41826 -9.45308 -16.35106 curveto

 pgfstr

 save

 [0.52101 0.85349 -0.85349 0.52101 -9.4531 -16.35106 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -70.98837 -111.96114 ] concat

 pgfs


 498 -132 a
 0 setgray
 498 -132 a Fb(rx)g(=)h(0)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 -27.58543 -226.77457 moveto

 -94.49977 -226.77457 lineto

 pgfstr

 save

 [-1.0 0.0 0.0 -1.0 -94.49977 -226.77457 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 save

 save

 [1.0 0.0 0.0 1.0 -75.53789 -236.71481 ] concat

 pgfs



498 -132 a
 0 setgray
 498 -132 a Fb(rx)f(=)h(1)498 -132 y


 pgfr

 restore

 restore

 restore

 save

 -114.49129 -208.37938 moveto

 -119.68932 -121.78734 -87.77017 -57.95135 -15.7608 -10.40604 curveto

 pgfstr

 save

 [0.83447 0.55096 -0.55096 0.83447 -15.7608 -10.40604 ] concat

 save 0.31879 pgfw [ ] 0.0 setdash 1 setlinecap 1 setlinejoin -1.19551
1.59401 moveto -1.09587 0.99626 0.0 0.09961 0.29886 0.0 curveto 0.0
-0.09961 -1.09587 -0.99626 -1.19551 -1.59401 curveto pgfstr restore

 restore

 restore

 restore

 newpath

 restore

 pgfc


 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
